services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/share/nginx/html
    # O frontend n찾o exp천e diretamente a sua porta

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - PORT=${PORT}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - NODE_ENV=${NODE_ENV}
      - SESSION_SECRET=${SESSION_SECRET}
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "${PORT}:3000"  
    # O backend n찾o exp천e diretamente a sua porta

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./frontend:/usr/share/nginx/html      

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 30s
      retries: 10
      start_period: 10s
      timeout: 15s

volumes:
  mysql-data:
  frontend:
